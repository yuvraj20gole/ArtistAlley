# Generated by Django 5.2.6 on 2025-09-08 17:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, help_text='CSS class for the category icon', max_length=50, verbose_name='icon class')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('creation_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='year of creation')),
                ('medium', models.CharField(blank=True, max_length=100, verbose_name='medium')),
                ('style', models.CharField(blank=True, max_length=100, verbose_name='style')),
                ('dimensions', models.CharField(blank=True, max_length=100, verbose_name='dimensions')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Price in USD', max_digits=10, null=True, verbose_name='price')),
                ('is_price_negotiable', models.BooleanField(default=False, verbose_name='price negotiable')),
                ('is_for_sale', models.BooleanField(default=True, verbose_name='for sale')),
                ('is_framed', models.BooleanField(default=False, verbose_name='framed')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('sold', 'Sold'), ('archived', 'Archived')], default='draft', max_length=10, verbose_name='status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('artist', models.ForeignKey(limit_choices_to={'is_artist': True}, on_delete=django.db.models.deletion.CASCADE, related_name='artworks', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artworks', to='artworks.category')),
            ],
            options={
                'verbose_name': 'artwork',
                'verbose_name_plural': 'artworks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtworkImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='artworks/%Y/%m/%d/', verbose_name='image')),
                ('alt_text', models.CharField(blank=True, help_text='A description of the image for accessibility', max_length=125, verbose_name='alternative text')),
                ('is_primary', models.BooleanField(default=False, verbose_name='primary image')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='artworks.artwork')),
            ],
            options={
                'verbose_name': 'artwork image',
                'verbose_name_plural': 'artwork images',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='artworks.artwork')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'favorite',
                'verbose_name_plural': 'favorites',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['-created_at'], name='artworks_ar_created_809d6e_idx'),
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['status'], name='artworks_ar_status_d03118_idx'),
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['is_featured'], name='artworks_ar_is_feat_718e04_idx'),
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['is_for_sale'], name='artworks_ar_is_for__948fd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('user', 'artwork')},
        ),
    ]
